<?php

/**
 * This is the model base class for the table "media_playlist_item".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PlaylistItem".
 *
 * Columns in table "media_playlist_item" available as properties of the model,
 * followed by relations of table "media_playlist_item" available as properties of the model.
 *
 * @property integer $playlist_id
 * @property integer $video_id
 * @property integer $order
 *
 * @property MediaVideo $video
 * @property MediaPlaylist $playlist
 */
abstract class BasePlaylistItem extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'media_playlist_item';
    }

    public static function representingColumn() {
        return 'playlist_id';
    }

    public function rules() {
        return array(
            array('playlist_id, video_id', 'required'),
            array('playlist_id, video_id, order', 'numerical', 'integerOnly'=>true),
            array('playlist_id, video_id, order', 'safe', 'on'=>'search'),
	    array('order', 'numerical', 'integerOnly'=>true),
        );
    }

    public function relations() {
        return array(
            'video' => array(self::BELONGS_TO, 'Video', 'video_id'),
            'playlist' => array(self::BELONGS_TO, 'Playlist', 'playlist_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'playlist_id' => Yii::t('app', 'Soittolista'),
                'video_id' => Yii::t('app', 'Video'),
                'order' => Yii::t('app', 'JÃ¤rjestys'),
                'video' => null,
		'title' => 'Nimi',
                'playlist' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('playlist_id', $this->playlist_id);
        $criteria->compare('video_id', $this->video_id);
        $criteria->compare('order', $this->order);
	$criteria->order = 't.order ASC';
        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}